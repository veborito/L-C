
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE MINUS MODULO NUMBER PLUS PRINT TIMES VARstatement : VAR ASSIGN expressionstatement : PRINT expressionstatement : expressionexpression : expression PLUS term expression : expression MINUS termexpression : termterm : term TIMES NUMBERterm : term DIVIDE NUMBERterm : term MODULO NUMBERterm : NUMBERterm : VAR'
    
_lr_action_items = {'VAR':([0,4,7,8,9,],[2,11,11,11,11,]),'PRINT':([0,],[4,]),'NUMBER':([0,4,7,8,9,12,13,14,],[6,6,6,6,6,18,19,20,]),'$end':([1,2,3,5,6,10,11,15,16,17,18,19,20,],[0,-11,-3,-6,-10,-2,-11,-1,-4,-5,-7,-8,-9,]),'ASSIGN':([2,],[7,]),'TIMES':([2,5,6,11,16,17,18,19,20,],[-11,12,-10,-11,12,12,-7,-8,-9,]),'DIVIDE':([2,5,6,11,16,17,18,19,20,],[-11,13,-10,-11,13,13,-7,-8,-9,]),'MODULO':([2,5,6,11,16,17,18,19,20,],[-11,14,-10,-11,14,14,-7,-8,-9,]),'PLUS':([2,3,5,6,10,11,15,16,17,18,19,20,],[-11,8,-6,-10,8,-11,8,-4,-5,-7,-8,-9,]),'MINUS':([2,3,5,6,10,11,15,16,17,18,19,20,],[-11,9,-6,-10,9,-11,9,-4,-5,-7,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,7,],[3,10,15,]),'term':([0,4,7,8,9,],[5,5,5,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR ASSIGN expression','statement',3,'p_statement_var','startreklang.py',48),
  ('statement -> PRINT expression','statement',2,'p_statement_print','startreklang.py',53),
  ('statement -> expression','statement',1,'p_statement_expr','startreklang.py',57),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','startreklang.py',61),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','startreklang.py',65),
  ('expression -> term','expression',1,'p_expression_term','startreklang.py',69),
  ('term -> term TIMES NUMBER','term',3,'p_term_times','startreklang.py',73),
  ('term -> term DIVIDE NUMBER','term',3,'p_term_divide','startreklang.py',77),
  ('term -> term MODULO NUMBER','term',3,'p_term_modulo','startreklang.py',81),
  ('term -> NUMBER','term',1,'p_term_number','startreklang.py',85),
  ('term -> VAR','term',1,'p_term_var','startreklang.py',89),
]
